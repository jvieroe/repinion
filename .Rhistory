sticker(p1, package="repinion",
p_color = "#e13c32",
p_family = font_choice,
#p_family = "Arial",
h_fill = "white",
h_color = "#e13c32",
p_x = 1, p_y = 1.45,
p_size = 26,
s_x = 1.0, s_y = .8,
s_width = 1.20, s_height = 0.9,
filename="man/figures/icon.png")
sticker(p1, package="repinion",
p_color = "#e13c32",
p_family = font_choice,
#p_family = "Arial",
h_fill = "white",
h_color = "#e13c32",
p_x = 1, p_y = 1.45,
p_size = 26,
s_x = 1.0, s_y = .8,
s_width = 1.20, s_height = 1.0,
filename="man/figures/icon.png")
sticker(p1, package="repinion",
p_color = "#e13c32",
p_family = font_choice,
#p_family = "Arial",
h_fill = "white",
h_color = "#e13c32",
p_x = 1, p_y = 1.45,
p_size = 26,
s_x = 1.0, s_y = .75,
s_width = 1.20, s_height = 1.0,
filename="man/figures/icon.png")
sticker(p1, package="repinion",
p_color = "#e13c32",
p_family = font_choice,
#p_family = "Arial",
h_fill = "white",
h_color = "#e13c32",
p_x = 1, p_y = 1.35,
p_size = 26,
s_x = 1.0, s_y = .75,
s_width = 1.20, s_height = 1.0,
filename="man/figures/icon.png")
sticker(p1, package="repinion",
p_color = "#e13c32",
p_family = font_choice,
#p_family = "Arial",
h_fill = "white",
h_color = "#e13c32",
p_x = 1, p_y = 1.4,
p_size = 26,
s_x = 1.0, s_y = .75,
s_width = 1.20, s_height = 1.0,
filename="man/figures/icon.png")
usethis::use_logo("man/figures/icon.png")
p1 <- mtcars %>%
filter(am == 1) %>%
filter(car != "Volvo 142E") %>%
filter(car != "Mazda RX4 Wag") %>%
filter(car != "Lotus Europa") %>%
filter(car != "Toyota Corolla") %>%
ggplot(., aes(x = wt,
y = mpg,
shape = factor(vs))) +
geom_point(size = 2,
color = "#e13c32",
#position = position_jitter(width = .80)
) +
scale_shape_manual(values = c(15, 16)) +
scale_y_continuous(expand = c(.1, .1)) +
scale_x_continuous(expand = c(.1, .1)) +
theme_classic() +
theme(axis.line.x = element_line(color = "grey80"),
axis.line.y = element_line(color = "grey80"),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
panel.grid.major.x = element_line(),
panel.grid.major.y = element_line(),
legend.position = "none") +
theme_transparent()
sticker(p1, package="repinion",
p_color = "#e13c32",
p_family = font_choice,
#p_family = "Arial",
h_fill = "white",
h_color = "#e13c32",
p_x = 1, p_y = 1.4,
p_size = 26,
s_x = 1.0, s_y = .75,
s_width = 1.20, s_height = 1.0,
filename="man/figures/icon.png")
p1 <- mtcars %>%
filter(am == 1) %>%
filter(car != "Volvo 142E") %>%
filter(car != "Mazda RX4 Wag") %>%
filter(car != "Lotus Europa") %>%
filter(car != "Toyota Corolla") %>%
ggplot(., aes(x = wt,
y = mpg,
shape = factor(vs))) +
geom_point(size = 2,
color = "#e13c32",
#position = position_jitter(width = .80)
) +
scale_shape_manual(values = c(15, 16)) +
scale_y_continuous(expand = c(.05, .05)) +
scale_x_continuous(expand = c(.05, .05)) +
theme_classic() +
theme(axis.line.x = element_line(color = "grey80"),
axis.line.y = element_line(color = "grey80"),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
panel.grid.major.x = element_line(),
panel.grid.major.y = element_line(),
legend.position = "none") +
theme_transparent()
sticker(p1, package="repinion",
p_color = "#e13c32",
p_family = font_choice,
#p_family = "Arial",
h_fill = "white",
h_color = "#e13c32",
p_x = 1, p_y = 1.4,
p_size = 26,
s_x = 1.0, s_y = .75,
s_width = 1.20, s_height = 1.0,
filename="man/figures/icon.png")
p1 <- mtcars %>%
filter(am == 1) %>%
filter(car != "Volvo 142E") %>%
filter(car != "Mazda RX4 Wag") %>%
filter(car != "Lotus Europa") %>%
filter(car != "Toyota Corolla") %>%
ggplot(., aes(x = wt,
y = mpg,
shape = factor(vs))) +
geom_point(size = 2,
color = "#e13c32",
#position = position_jitter(width = .80)
) +
scale_shape_manual(values = c(15, 16)) +
scale_y_continuous(expand = c(.1, .05)) +
scale_x_continuous(expand = c(.05, .05)) +
theme_classic() +
theme(axis.line.x = element_line(color = "grey80"),
axis.line.y = element_line(color = "grey80"),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
panel.grid.major.x = element_line(),
panel.grid.major.y = element_line(),
legend.position = "none") +
theme_transparent()
sticker(p1, package="repinion",
p_color = "#e13c32",
p_family = font_choice,
#p_family = "Arial",
h_fill = "white",
h_color = "#e13c32",
p_x = 1, p_y = 1.4,
p_size = 26,
s_x = 1.0, s_y = .75,
s_width = 1.20, s_height = 1.0,
filename="man/figures/icon.png")
sticker(p1, package="repinion",
p_color = "#e13c32",
p_family = font_choice,
#p_family = "Arial",
h_fill = "white",
h_color = "#e13c32",
p_x = 1, p_y = 1.4,
p_size = 26,
s_x = 1.0, s_y = .75,
s_width = 1.20, s_height = 1.0,
filename="man/figures/icon.png")
sticker(p1, package="repinion",
p_color = "#e13c32",
p_family = font_choice,
#p_family = "Arial",
h_fill = "white",
h_color = "#e13c32",
p_x = 1, p_y = 1.4,
p_size = 26,
s_x = 1.0, s_y = .75,
s_width = 1.20, s_height = 1.0,
filename="man/figures/icon.svg")
use_logo("man/figures/icon.svg")
document()
sticker(p1, package="repinion",
p_color = "#e13c32",
p_family = font_choice,
#p_family = "Arial",
h_fill = "white",
h_color = "#e13c32",
p_x = 1, p_y = 1.4,
p_size = 1,
s_x = 1.0, s_y = .75,
s_width = 1.20, s_height = 1.0,
filename="man/figures/icon.svg")
sticker(p1, package="repinion",
p_color = "#e13c32",
p_family = font_choice,
#p_family = "Arial",
h_fill = "white",
h_color = "#e13c32",
p_x = 1, p_y = 1.4,
p_size = 5,
s_x = 1.0, s_y = .75,
s_width = 1.20, s_height = 1.0,
filename="man/figures/icon.svg")
sticker(p1, package="repinion",
p_color = "#e13c32",
p_family = font_choice,
#p_family = "Arial",
h_fill = "white",
h_color = "#e13c32",
p_x = 1, p_y = 1.4,
p_size = 15,
s_x = 1.0, s_y = .75,
s_width = 1.20, s_height = 1.0,
filename="man/figures/icon.svg")
sticker(p1, package="repinion",
p_color = "#e13c32",
p_family = font_choice,
#p_family = "Arial",
h_fill = "white",
h_color = "#e13c32",
p_x = 1, p_y = 1.4,
p_size = 10,
s_x = 1.0, s_y = .75,
s_width = 1.20, s_height = 1.0,
filename="man/figures/icon.svg")
sticker(p1, package="repinion",
p_color = "#e13c32",
p_family = font_choice,
#p_family = "Arial",
h_fill = "white",
h_color = "#e13c32",
p_x = 1, p_y = 1.4,
p_size = 8,
s_x = 1.0, s_y = .75,
s_width = 1.20, s_height = 1.0,
filename="man/figures/icon.svg")
use_logo("man/figures/icon.svg")
use_logo("man/figures/icon.svg")
document()
check()
library(hexSticker)
library(tidyverse)
library(magrittr)
library(showtext)
# Cabin Sketch
font_choice <- "Special Elite"
#font_add_google("Gochi Hand", "gochi")
font_add_google(font_choice)
showtext_auto()
mtcars <- mtcars %>%
tibble::rownames_to_column("car")
mtcars
mtcars %>%
filter(am == 1) %>%
ggplot(., aes(x = wt,
y = mpg,
shape = factor(vs))) +
geom_point(size = 7,
color = "#e13c32",
#position = position_jitter(width = .80)
) +
geom_label(aes(label = car),
label.padding = unit(0.0, "lines")) +
scale_shape_manual(values = c(15, 16)) +
theme_classic()
p1 <- mtcars %>%
filter(am == 1) %>%
filter(car != "Volvo 142E") %>%
filter(car != "Mazda RX4 Wag") %>%
filter(car != "Lotus Europa") %>%
filter(car != "Toyota Corolla") %>%
ggplot(., aes(x = wt,
y = mpg,
shape = factor(vs))) +
geom_point(size = 2,
color = "#e13c32",
#position = position_jitter(width = .80)
) +
scale_shape_manual(values = c(15, 16)) +
scale_y_continuous(expand = c(.1, .05)) +
scale_x_continuous(expand = c(.05, .05)) +
theme_classic() +
theme(axis.line.x = element_line(color = "grey80"),
axis.line.y = element_line(color = "grey80"),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
panel.grid.major.x = element_line(),
panel.grid.major.y = element_line(),
legend.position = "none") +
theme_transparent()
sticker(p1, package="repinion",
p_color = "#e13c32",
p_family = font_choice,
#p_family = "Arial",
h_fill = "white",
h_color = "#e13c32",
p_x = 1, p_y = 1.4,
p_size = 26,
s_x = 1.0, s_y = .75,
s_width = 1.20, s_height = 1.0,
filename="man/figures/icon.png")
sticker(p1, package="repinion",
p_color = "#e13c32",
p_family = font_choice,
#p_family = "Arial",
h_fill = "white",
h_color = "#e13c32",
p_x = 1, p_y = 1.4,
p_size = 8,
s_x = 1.0, s_y = .75,
s_width = 1.20, s_height = 1.0,
filename="man/figures/icon.svg")
use_logo("man/figures/icon.svg")
document()
rm(mtcars, p1, font_choice)
check()
library(devtools)
library(roxygen2)
document()
devtools::install_github("jvieroe/repinion")
library(devtools)
library(roxygen2)
document()
library(devtools)
devtools::install_github("jvieroe/repinion")
library(repinion)
library(tidyverse)
ggplot(mtcars, aes(x = wt,
y = mpg)) +
geom_point(aes(color = factor(carb)),
size = 5,
alpha = .95) +
geom_smooth(method = "lm",
size = 1,
color = grabcol("Epinion Red"),
se = F) +
epitheme_classic(gridlines = "both") +
color_epi_d(palette = "main")
ggplot(mtcars, aes(x = wt,
y = mpg,
color = factor(am))) +
geom_point(size = 5,
alpha = .95) +
epitheme_dust() +
theme(legend.position = "right")
ggplot(mtcars, aes(x = wt,
y = mpg,
color = factor(am))) +
geom_point(size = 5,
alpha = .95) +
epitheme_dust(background = "yes") +
theme(legend.position = "right")
ggplot(mtcars, aes(x = wt,
y = mpg,
color = factor(am))) +
geom_point(size = 5,
alpha = .95) +
epitheme_dust(background = F) +
theme(legend.position = "right")
ggplot(mtcars, aes(x = wt,
y = mpg,
color = factor(am))) +
geom_point(size = 5,
alpha = .95) +
epitheme_dust(background = T) +
theme(legend.position = "right")
ggplot(mtcars, aes(x = wt,
y = mpg,
color = factor(am))) +
geom_point(size = 5,
alpha = .95) +
epitheme_dust() +
theme(legend.position = "right")
document()
library(repinion)
library(devtools)
library(roxygen2)
## code to prepare `DATASET` dataset goes here
# https://drsimonj.svbtle.com/creating-corporate-colour-palettes-for-ggplot2
# ---------- Create vector of colors ----------
epi_cols <- tibble::tibble(
name = c(
"Epinion Red",
"Epinion DarkBlue",
"Epinion WarmSand",
"Epinion DarkPurple",
"Epinion ClearBlue",
"Epinion LightDeepBlue",
"Epinion LightPurple",
"Epinion LightBlue",
"Epinion Green",
"Epinion LightGreen",
"Epinion Gold",
"Epinion LightGold"),
hex_codes = c(
"#E13C32",
"#0F283C",
"#E8E1D5",
"#641E3C",
"#233CA0",
"#68838B",
"#BA7384",
"#A7C7D7",
"#004337",
"#73A89A",
"#C18022",
"#EBC882"
))
epi_cols <- tibble::deframe(epi_cols)
# Upload data to GitHub
usethis::use_data(epi_cols,
overwrite = TRUE)
# ---------- Create list with continuous color palettes ----------
epipal_c <- list(
`epiblue` = getcols_epi("Epinion LightBlue", "Epinion DarkBlue"),
`epipurple` = getcols_epi("Epinion LightPurple", "Epinion DarkPurple"),
`epigreen` = getcols_epi("Epinion LightGreen", "Epinion Green"),
`epigold` = getcols_epi("Epinion LightGold", "Epinion Gold"),
`epiredblue` = getcols_epi("Epinion Red", "Epinion DarkBlue"),
`epigoldblue` = getcols_epi("Epinion LightGold", "Epinion DarkBlue"),
`epigoldgreen` = getcols_epi("Epinion LightGold", "Epinion Green"),
`epigoldpurple` = getcols_epi("Epinion LightGold", "Epinion DarkPurple"),
`epigoldred` = getcols_epi("Epinion LightGold", "Epinion Red")
)
# Upload data to GitHub
usethis::use_data(epipal_c,
overwrite = TRUE)
# ---------- Create list with discrete color palettes ----------
epipal_d <- list()
epipal_d$main <- list(
"Epinion DarkBlue" = "#0F283C",
"Epinion WarmSand" = "#E8E1D5",
"Epinion DarkPurple" = "#641E3C",
"Epinion ClearBlue" = "#233CA0",
"Epinion LightDeepBlue" = "#68838B",
"Epinion LightPurple" = "#BA7384",
"Epinion LightBlue" = "#A7C7D7",
"Epinion Green" = "#004337",
"Epinion LightGreen" = "#73A89A",
"Epinion Gold" = "#C18022",
"Epinion LightGold" = "#EBC882"#,
#"Epinion Red" = "#E13C32"
)
epipal_d$usered <- list(
"Epinion Red" = "#E13C32",
"Epinion DarkBlue" = "#0F283C",
"Epinion WarmSand" = "#E8E1D5",
"Epinion DarkPurple" = "#641E3C",
"Epinion ClearBlue" = "#233CA0",
"Epinion LightDeepBlue" = "#68838B",
"Epinion LightPurple" = "#BA7384",
"Epinion LightBlue" = "#A7C7D7",
"Epinion Green" = "#004337",
"Epinion LightGreen" = "#73A89A",
"Epinion Gold" = "#C18022",
"Epinion LightGold" = "#EBC882"
)
epipal_d$nosand <- list(
"Epinion Red" = "#E13C32",
"Epinion DarkBlue" = "#0F283C",
"Epinion DarkPurple" = "#641E3C",
"Epinion ClearBlue" = "#233CA0",
"Epinion LightDeepBlue" = "#68838B",
"Epinion LightPurple" = "#BA7384",
"Epinion LightBlue" = "#A7C7D7",
"Epinion Green" = "#004337",
"Epinion LightGreen" = "#73A89A",
"Epinion Gold" = "#C18022",
"Epinion LightGold" = "#EBC882"
)
# Upload data to GitHub
usethis::use_data(epipal_d,
overwrite = TRUE)
document()
#' DSB colors
#'
#' A named vector with Epinion colors in HEX codes
#'
#' @format A `list` with 4 elements
"epi_cols"
#' Discrete Epinion color palettes
#'
#' @format A `list` with 3 elements
"epipal_d"
#' Continuous Epinion color palettes
#'
#' @format A `list` with 9 elements
"epipal_c"
document()
