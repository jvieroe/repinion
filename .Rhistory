# ---------- Create list with discrete color palettes ----------
epipal_d <- list()
epipal_d$main <- list(
"Epinion DarkBlue" = "#0F283C",
"Epinion WarmSand" = "#E8E1D5",
"Epinion DarkPurple" = "#641E3C",
"Epinion ClearBlue" = "#233CA0",
"Epinion LightDeepBlue" = "#68838B",
"Epinion LightPurple" = "#BA7384",
"Epinion LightBlue" = "#A7C7D7",
"Epinion Green" = "#004337",
"Epinion LightGreen" = "#73A89A",
"Epinion Gold" = "#C18022",
"Epinion LightGold" = "#EBC882",
"Epinion Red" = "#E13C32"
)
# Upload data to GitHub
usethis::use_data(epipal_d,
overwrite = TRUE)
document()
paste0("Epinion ", "DarkBlue")
getcols_epi <- function(...) {
cols <- c(...)
if (is.null(cols))
return (epi_cols)
epi_cols[cols]
}
## code to prepare `DATASET` dataset goes here
# https://drsimonj.svbtle.com/creating-corporate-colour-palettes-for-ggplot2
# ---------- Create vector of colors ----------
epi_cols <- tibble::tibble(
name = c(
"Epinion Red",
"Epinion DarkBlue",
"Epinion WarmSand",
"Epinion DarkPurple",
"Epinion ClearBlue",
"Epinion LightDeepBlue",
"Epinion LightPurple",
"Epinion LightBlue",
"Epinion Green",
"Epinion LightGreen",
"Epinion Gold",
"Epinion LightGold"),
hex_codes = c(
"#E13C32",
"#0F283C",
"#E8E1D5",
"#641E3C",
"#233CA0",
"#68838B",
"#BA7384",
"#A7C7D7",
"#004337",
"#73A89A",
"#C18022",
"#EBC882"
))
epi_cols <- tibble::deframe(epi_cols)
# Upload data to GitHub
usethis::use_data(epi_cols,
overwrite = TRUE)
# ---------- Create list with continuous color palettes ----------
epipal_c <- list(
`epiblue` = getcols_epi("Epinion WarmSand", "Epinion ClearBlue", "Epinion DarkBlue"),
`epipurple` = getcols_epi("Epinion WarmSand", "Epinion LightPurple", "Epinion DarkPurple"),
`epigreen` = getcols_epi("Epinion WarmSand", "Epinion LightGreen", "Epinion Green"),
`epigold` = getcols_epi("Epinion WarmSand", "Epinion LightGold", "Epinion Gold")
)
# Upload data to GitHub
usethis::use_data(epipal_c,
overwrite = TRUE)
# ---------- Create list with discrete color palettes ----------
epipal_d <- list()
epipal_d$main <- list(
"Epinion DarkBlue" = "#0F283C",
"Epinion WarmSand" = "#E8E1D5",
"Epinion DarkPurple" = "#641E3C",
"Epinion ClearBlue" = "#233CA0",
"Epinion LightDeepBlue" = "#68838B",
"Epinion LightPurple" = "#BA7384",
"Epinion LightBlue" = "#A7C7D7",
"Epinion Green" = "#004337",
"Epinion LightGreen" = "#73A89A",
"Epinion Gold" = "#C18022",
"Epinion LightGold" = "#EBC882",
"Epinion Red" = "#E13C32"
)
# Upload data to GitHub
usethis::use_data(epipal_d,
overwrite = TRUE)
rm(getcols_epi)
document()
getcols_epi <- function(...) {
cols <- c(...)
if (is.null(cols))
return (epi_cols)
epi_cols[cols]
}
## code to prepare `DATASET` dataset goes here
# https://drsimonj.svbtle.com/creating-corporate-colour-palettes-for-ggplot2
# ---------- Create vector of colors ----------
epi_cols <- tibble::tibble(
name = c(
"Epinion Red",
"Epinion DarkBlue",
"Epinion WarmSand",
"Epinion DarkPurple",
"Epinion ClearBlue",
"Epinion LightDeepBlue",
"Epinion LightPurple",
"Epinion LightBlue",
"Epinion Green",
"Epinion LightGreen",
"Epinion Gold",
"Epinion LightGold"),
hex_codes = c(
"#E13C32",
"#0F283C",
"#E8E1D5",
"#641E3C",
"#233CA0",
"#68838B",
"#BA7384",
"#A7C7D7",
"#004337",
"#73A89A",
"#C18022",
"#EBC882"
))
epi_cols <- tibble::deframe(epi_cols)
# Upload data to GitHub
usethis::use_data(epi_cols,
overwrite = TRUE)
# ---------- Create list with continuous color palettes ----------
epipal_c <- list(
`epiblue` = getcols_epi("Epinion WarmSand", "Epinion ClearBlue", "Epinion DarkBlue"),
`epipurple` = getcols_epi("Epinion WarmSand", "Epinion LightPurple", "Epinion DarkPurple"),
`epigreen` = getcols_epi("Epinion WarmSand", "Epinion LightGreen", "Epinion Green"),
`epigold` = getcols_epi("Epinion WarmSand", "Epinion LightGold", "Epinion Gold")
)
# Upload data to GitHub
usethis::use_data(epipal_c,
overwrite = TRUE)
# ---------- Create list with discrete color palettes ----------
epipal_d <- list()
epipal_d$main <- list(
"Epinion DarkBlue" = "#0F283C",
"Epinion WarmSand" = "#E8E1D5",
"Epinion DarkPurple" = "#641E3C",
"Epinion ClearBlue" = "#233CA0",
"Epinion LightDeepBlue" = "#68838B",
"Epinion LightPurple" = "#BA7384",
"Epinion LightBlue" = "#A7C7D7",
"Epinion Green" = "#004337",
"Epinion LightGreen" = "#73A89A",
"Epinion Gold" = "#C18022",
"Epinion LightGold" = "#EBC882",
"Epinion Red" = "#E13C32"
)
# Upload data to GitHub
usethis::use_data(epipal_d,
overwrite = TRUE)
rm(getcols_epi())
rm(getcols_epi
)
document()
document()
document()
document()
document()
document()
document()
document()
document()
document()
document()
document()
document()
document()
document()
document()
document()
getcols_epi <- function(...) {
cols <- c(...)
if (is.null(cols))
return (epi_cols)
epi_cols[cols]
}
## code to prepare `DATASET` dataset goes here
# https://drsimonj.svbtle.com/creating-corporate-colour-palettes-for-ggplot2
# ---------- Create vector of colors ----------
epi_cols <- tibble::tibble(
name = c(
"Epinion Red",
"Epinion DarkBlue",
"Epinion WarmSand",
"Epinion DarkPurple",
"Epinion ClearBlue",
"Epinion LightDeepBlue",
"Epinion LightPurple",
"Epinion LightBlue",
"Epinion Green",
"Epinion LightGreen",
"Epinion Gold",
"Epinion LightGold"),
hex_codes = c(
"#E13C32",
"#0F283C",
"#E8E1D5",
"#641E3C",
"#233CA0",
"#68838B",
"#BA7384",
"#A7C7D7",
"#004337",
"#73A89A",
"#C18022",
"#EBC882"
))
epi_cols <- tibble::deframe(epi_cols)
# Upload data to GitHub
usethis::use_data(epi_cols,
overwrite = TRUE)
# ---------- Create list with continuous color palettes ----------
epipal_c <- list(
`epiblue` = getcols_epi("Epinion WarmSand", "Epinion ClearBlue", "Epinion DarkBlue"),
`epipurple` = getcols_epi("Epinion WarmSand", "Epinion LightPurple", "Epinion DarkPurple"),
`epigreen` = getcols_epi("Epinion WarmSand", "Epinion LightGreen", "Epinion Green"),
`epigold` = getcols_epi("Epinion WarmSand", "Epinion LightGold", "Epinion Gold"),
`epiredblue` = getcols_epi("Epinion Red", "Epinion DarkBlue"),
`epidarkblue` = getcols_epi("Epinion WarmSand", "Epinion DarkBlue")
)
# Upload data to GitHub
usethis::use_data(epipal_c,
overwrite = TRUE)
# ---------- Create list with discrete color palettes ----------
epipal_d <- list()
epipal_d$main <- list(
"Epinion DarkBlue" = "#0F283C",
"Epinion WarmSand" = "#E8E1D5",
"Epinion DarkPurple" = "#641E3C",
"Epinion ClearBlue" = "#233CA0",
"Epinion LightDeepBlue" = "#68838B",
"Epinion LightPurple" = "#BA7384",
"Epinion LightBlue" = "#A7C7D7",
"Epinion Green" = "#004337",
"Epinion LightGreen" = "#73A89A",
"Epinion Gold" = "#C18022",
"Epinion LightGold" = "#EBC882",
"Epinion Red" = "#E13C32"
)
# Upload data to GitHub
usethis::use_data(epipal_d,
overwrite = TRUE)
document()
rm(getcols_epi)
document()
getElement(getcols_epi(), paste0("Epinion ",
textcolor)
getElement(getcols_epi(), paste0("Epinion ",
textcolor))
getElement(getcols_epi(), paste0("Epinion ",
textcolor))
textcolor <- "WarmSand"
getElement(getcols_epi(), paste0("Epinion ",
textcolor))
library(devtools)
library(usethis)
library(roxygen2)
usethis::use_readme_rmd()
library(repinion)
library(tidyverse)
ggplot(mtcars, aes(x = wt,
y = mpg,
color = factor(am))) +
geom_point(size = 4) +
facet_wrap(~ vs) +
dsb_theme_classic() +
color_epi_d()
ggplot(mtcars, aes(x = wt,
y = mpg,
color = factor(am))) +
geom_point(size = 4) +
facet_wrap(~ vs) +
epitheme_classic() +
color_epi_d()
ggplot(mtcars, aes(x = wt,
y = mpg,
color = factor(am))) +
geom_point(size = 4) +
epitheme_classic(legend = T,
gridlines = "both") +
color_epi_d()
ggplot(mtcars, aes(x = wt,
y = mpg,
color = factor(am))) +
geom_point(size = 4,
alpha = .5) +
epitheme_classic(legend = T,
gridlines = "both") +
color_epi_d()
ggplot(mtcars, aes(x = wt,
y = mpg,
color = factor(am))) +
geom_point(size = 4,
alpha = .85) +
epitheme_classic(legend = T,
gridlines = "both") +
color_epi_d()
ggplot(mtcars, aes(x = wt,
y = mpg,
color = factor(am))) +
geom_point(size = 4,
alpha = .95) +
epitheme_classic(legend = T,
gridlines = "both") +
color_epi_d()
ggplot(mtcars, aes(x = wt,
y = mpg,
color = factor(am))) +
geom_point(size = 5,
alpha = .95) +
epitheme_classic(legend = T,
gridlines = "both") +
color_epi_d()
ggplot(mtcars, aes(x = wt,
y = mpg,
color = factor(am))) +
geom_point(size = 5,
alpha = .95) +
epitheme_classic(legend = T,
gridlines = "both") +
color_epi_d(secondary = "DarkPurple")
ggplot(mtcars, aes(x = wt,
y = mpg,
color = factor(am))) +
geom_point(size = 5,
alpha = .95) +
epitheme_classic(legend = T,
gridlines = "both") +
color_epi_d()
?epitheme_classic
ggplot(mtcars, aes(x = wt,
y = mpg,
color = factor(am))) +
geom_point(size = 5,
alpha = .95) +
epitheme_classic() +
color_epi_d()
ggplot(mtcars, aes(x = wt,
y = mpg,
color = factor(am))) +
geom_point(size = 5,
alpha = .95) +
epitheme_classic(legend = F,
gridlines = "both") +
color_epi_d()
ggplot(mtcars, aes(x = wt,
y = mpg,
color = factor(am))) +
geom_point(size = 5,
alpha = .95) +
epitheme_classic(legend = F,
gridlines = "both")
ggplot(mtcars, aes(x = wt,
y = mpg,
color = factor(am))) +
geom_point(size = 5,
alpha = .95) +
epitheme_classic(legend = T,
gridlines = "both")
ggplot(mtcars, aes(x = wt,
y = mpg,
color = factor(am))) +
geom_point(size = 5,
alpha = .95) +
epitheme_classic(legend = T,
gridlines = "both")
ggplot(mtcars, aes(x = wt,
y = mpg,
color = factor(am))) +
geom_point(size = 5,
alpha = .95) +
epitheme_classic(legend = T,
gridlines = "both") +
theme(legend.position = "right")
ggplot(mtcars, aes(x = wt,
y = mpg,
color = factor(am))) +
geom_point(size = 5,
alpha = .95) +
epitheme_classic() +
theme(legend.position = "right")
getcols_epi()
getcols_epi("DarkBlue")
getcols_epi()
getcols_epi("DarkBlue")
getcols_epi("DarkBlue")
getcols_epi()
getcols_epi("Epinion DarkBlue")
p1 <-
ggplot(mtcars, aes(x = wt,
y = mpg,
color = factor(am))) +
geom_point(size = 5,
alpha = .95) +
epitheme_classic(legend = F) +
color_epi_d()
p1
p1 <-
ggplot(mtcars, aes(x = wt,
y = mpg,
color = factor(am))) +
geom_point(size = 5,
alpha = .95) +
epitheme_classic(legend = F) +
scale_color_manual(values = c(getElement(getcols_epi(), "Epinion DarkBlue"),
getElement(getcols_epi(), "Epinion WarmSand")))
p2 <-
ggplot(mtcars, aes(x = wt,
y = mpg,
color = factor(am))) +
geom_point(size = 5,
alpha = .95) +
epitheme_classic(legend = F) +
color_epi_d()
grid.arrange(
p1, p2,
ncol = 1
)
library(gridExtra)
grid.arrange(
p1, p2,
ncol = 1
)
getcols_epi()
p2 <-
ggplot(mtcars, aes(x = wt,
y = mpg,
color = factor(am))) +
geom_point(size = 5,
alpha = .95) +
epitheme_classic(legend = F) +
scale_color_manual(values = c("#0F283C",
"#E8E1D5"))
p2 <-
ggplot(mtcars, aes(x = wt,
y = mpg,
color = factor(am))) +
geom_point(size = 5,
alpha = .95) +
epitheme_classic(legend = F) +
scale_color_manual(values = c(getElement(getcols_epi(), "Epinion DarkBlue"),
getElement(getcols_epi(), "Epinion WarmSand")))
grid.arrange(
p1, p2,
ncol = 1
)
?getElement
ggplot(mtcars, aes(x = wt,
y = mpg,
color = factor(am))) +
geom_point(size = 5,
alpha = .95) +
epitheme_classic(legend = F) +
color_epi_d()
grid.arrange(
p1, p2,
ncol = 2
)
?color_epi_d
p1 <- ggplot(mtcars, aes(x = wt,
y = mpg,
color = factor(am))) +
geom_point(size = 5,
alpha = .95) +
epitheme_classic(legend = F) +
color_epi_d()
p1 <- ggplot(mtcars, aes(x = wt,
y = mpg,
color = factor(am))) +
geom_point(size = 5,
alpha = .95) +
epitheme_classic(legend = F) +
color_epi_d()
p2 <- ggplot(mtcars, aes(x = wt,
y = mpg,
color = disp)) +
geom_point(size = 5,
shape = 21,
color = "NA",
alpha = .95) +
epitheme_classic(legend = F) +
fill_epi_c()
grid.arrange(
p1, p2,
ncol = 2
)
p2 <- ggplot(mtcars, aes(x = wt,
y = mpg,
fill = disp)) +
geom_point(size = 5,
shape = 21,
color = "NA",
alpha = .95) +
epitheme_classic(legend = F) +
fill_epi_c()
grid.arrange(
p1, p2,
ncol = 2
)
